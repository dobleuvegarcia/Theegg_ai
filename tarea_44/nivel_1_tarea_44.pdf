%PDF-1.3
1 0 obj
<< /Type /Catalog
/Outlines 2 0 R
/Pages 3 0 R >>
endobj
2 0 obj
<< /Type /Outlines /Count 0 >>
endobj
3 0 obj
<< /Type /Pages
/Kids [6 0 R
23 0 R
]
/Count 2
/Resources <<
/ProcSet 4 0 R
/Font << 
/F1 8 0 R
/F2 9 0 R
/F3 10 0 R
/F4 25 0 R
>>
/XObject << 
/I1 11 0 R
/I2 12 0 R
>>
>>
/MediaBox [0.000 0.000 595.280 841.890]
 >>
endobj
4 0 obj
[/PDF /Text /ImageC ]
endobj
5 0 obj
<<
/Creator (DOMPDF)
/CreationDate (D:20211016163616+02'00')
/ModDate (D:20211016163616+02'00')
/Title (PDF tarea 44)
/Subject (A la hora de desarrollar software es importante analizar su rendimiento en el tiempo. Una herramienta muy ˙til para realizar este an·lisis es la NotaciÛn Big O que el alumno de la escuela debe conocer)
>>
endobj
6 0 obj
<< /Type /Page
/Parent 3 0 R
/Annots [ 13 0 R 15 0 R 17 0 R 19 0 R 21 0 R ]
/Contents 7 0 R
>>
endobj
7 0 obj
<<
/Length 6905 >>
stream

0.000 0.529 0.349 rg
2.250 716.737 590.780 122.903 re f
1.000 1.000 1.000 rg
BT 19.500 801.574 Td /F2 10.5 Tf  [(VanesaVega)] TJ ET
BT 19.500 779.682 Td /F1 9.0 Tf  [(Nivel: 1)] TJ ET
BT 19.500 768.693 Td /F1 9.0 Tf  [(Tipo: individual)] TJ ET
BT 19.500 757.704 Td /F1 9.0 Tf  [(Modo: obligatorio)] TJ ET
BT 19.500 746.715 Td /F1 9.0 Tf  [(Dificultad: intermedio)] TJ ET
q
48.000 0 0 39.360 274.926 758.508 cm /I2 Do
Q
BT 430.666 790.585 Td /F2 10.5 Tf  [(Skootik Mobile Technologies)] TJ ET
BT 501.251 768.693 Td /F1 9.0 Tf  [(https://skootik.com)] TJ ET
BT 504.626 757.704 Td /F1 9.0 Tf  [(info@skootik.com)] TJ ET
0.953 0.576 0.224 rg
2.250 663.213 590.780 51.274 re f
1.000 1.000 1.000 rg
BT 41.329 691.421 Td /F2 10.5 Tf  [(A la hora de desarrollar software es importante analizar su rendimiento en el tiempo. Una herramienta )] TJ ET
BT 52.717 678.564 Td /F2 10.5 Tf  [(muy ˙til para realizar este an·lisis es la NotaciÛn Big O que el alumno de la escuela debe conocer)] TJ ET
0.000 0.000 0.000 rg
BT 92.056 614.040 Td /F2 18.0 Tf  [(An·lisis del rendimiento de las aplicaciones de IA)] TJ ET
0.000 0.000 0.000 RG
0.36 w 0 J [  ] 0 d
92.056 611.182 m 518.224 611.182 l S
BT 15.000 567.983 Td /F1 12.0 Tf  [(A la hora de desarrollar software es importante analizar su complejidad, mantenibilidad y escalabilidad. )] TJ ET
BT 15.000 553.331 Td /F1 12.0 Tf  [(En este an·lisis el rendimiento de la aplicaciÛn se convierte en un factor clave. A medida que las )] TJ ET
BT 15.000 538.679 Td /F1 12.0 Tf  [(aplicaciones crecen estas necesitan gestionar cada vez m·s comunicaciones, m·s datos, m·s )] TJ ET
BT 15.000 524.027 Td /F1 12.0 Tf  [(concurrencia)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 522.492 m 83.688 522.492 l S
BT 83.688 524.027 Td /F1 12.0 Tf  [(, m·s )] TJ ET
BT 116.364 524.027 Td /F1 12.0 Tf  [(cÛmputo)] TJ ET
0.24 w 0 J [  ] 0 d
116.364 522.492 m 162.384 522.492 l S
BT 162.384 524.027 Td /F1 12.0 Tf  [(, m·s peticiones, ... )] TJ ET
BT 15.000 494.975 Td /F1 12.0 Tf  [(Los algoritmos son el pilar de cualquier aplicaciÛn y suelen consumir una parte importante de los )] TJ ET
BT 15.000 480.323 Td /F1 12.0 Tf  [(recursos del servidor pero no todos los algoritmos rinden igual ni consumen lo mismo! Algunos son )] TJ ET
BT 15.000 465.671 Td /F1 12.0 Tf  [(r·pidos con pocos datos y lentos con muchos o viceversa. Algunos tienen un comportamiento lineal en )] TJ ET
BT 15.000 451.019 Td /F1 12.0 Tf  [(su particular )] TJ ET
BT 83.688 451.019 Td /F1 12.0 Tf  [(latencia)] TJ ET
0.24 w 0 J [  ] 0 d
83.688 449.484 m 125.040 449.484 l S
BT 125.040 451.019 Td /F1 12.0 Tf  [( a medida que incorporamos m·s datos al software y otros sin embargo pueden )] TJ ET
BT 15.000 436.367 Td /F1 12.0 Tf  [(tener un comportamiento logarÌtmico o exponencial.)] TJ ET
BT 15.000 407.315 Td /F1 12.0 Tf  [(Ahora ya sabemos que el rendimiento de las aplicaciones varia seg˙n aumenta el volumen de datos que )] TJ ET
BT 15.000 392.663 Td /F1 12.0 Tf  [(gestionan, por lo tanto, hacer un exhaustivo an·lisis del posible comportamiento del software en el futuro )] TJ ET
BT 15.000 378.011 Td /F1 12.0 Tf  [(es necesario para no llevarnos sorpresas inesperadas. )] TJ ET
BT 15.000 348.959 Td /F1 12.0 Tf  [(Saber pronosticar el comportamiento en tiempos de ejecuciÛn de los )] TJ ET
BT 383.160 348.959 Td /F1 12.0 Tf  [(algoritmos)] TJ ET
0.24 w 0 J [  ] 0 d
383.160 347.424 m 438.504 347.424 l S
BT 438.504 348.959 Td /F1 12.0 Tf  [( utilizados en cualquier )] TJ ET
BT 15.000 334.307 Td /F1 12.0 Tf  [(software de IA es inevitable por dos motivos:)] TJ ET
BT 15.000 319.655 Td /F2 12.0 Tf  [(1.-)] TJ ET
BT 29.004 319.655 Td /F1 12.0 Tf  [( Porque se han sobredimensionado las necesidades computacionales del software y se est·n )] TJ ET
BT 15.000 305.003 Td /F1 12.0 Tf  [(contratando servidores en exceso. Esto encarecerÌa nuestro producto y estarÌamos pagando por un )] TJ ET
BT 15.000 290.351 Td /F1 12.0 Tf  [(servicio que realmente no necesitamos. Adem·s en tecnologÌa los precios de la competencia suelen )] TJ ET
BT 15.000 275.699 Td /F1 12.0 Tf  [(estar muy ajustados por lo que si pretendemos ser competitivos estamos obligados a reducir en costes.)] TJ ET
BT 15.000 261.047 Td /F2 12.0 Tf  [(2.-)] TJ ET
BT 29.004 261.047 Td /F1 12.0 Tf  [( Porque se han desdeÒado las necesidades reales del aplicativo para funcionar correctamente por lo )] TJ ET
BT 15.000 246.395 Td /F1 12.0 Tf  [(que el software ser· lento y la experiencia de usuario pÈsima. En el Mundo del 5G que un aplicativo sea )] TJ ET
BT 15.000 231.743 Td /F1 12.0 Tf  [(lento no es una buena noticia.)] TJ ET
BT 15.000 202.691 Td /F1 12.0 Tf  [(Lo)] TJ ET
BT 28.344 202.691 Td /F2 12.0 Tf  [( costoso)] TJ ET
BT 77.688 202.691 Td /F1 12.0 Tf  [( y la )] TJ ET
BT 103.032 202.691 Td /F2 12.0 Tf  [(lentitud)] TJ ET
BT 146.364 202.691 Td /F1 12.0 Tf  [( no son una opciÛn en el sector tecnolÛgico. El p˙blico cada vez es m·s )] TJ ET
BT 15.000 188.039 Td /F1 12.0 Tf  [(exigente con el precio y con la experiencia de usuario por lo que cualquier empresa experta en IA est· )] TJ ET
BT 15.000 173.387 Td /F1 12.0 Tf  [(obligada a ajustar el precio todo lo posible para ser competitiva pero sin que afecte al rendimiento de su )] TJ ET
BT 15.000 158.735 Td /F1 12.0 Tf  [(servicio. Por lo tanto es necesario medir y pronosticar el comportamiento de los algoritmos en diferentes )] TJ ET
BT 15.000 144.083 Td /F1 12.0 Tf  [(circunstancias y hacer un an·lisis y una planificaciÛn preventiva para evitar problemas en futuros )] TJ ET
BT 15.000 129.431 Td /F1 12.0 Tf  [(acontecimientos e intentar que los algoritmos sean eficientes. )] TJ ET
BT 15.000 100.379 Td /F1 12.0 Tf  [(Seg˙n wikipedia la )] TJ ET
BT 118.380 100.379 Td /F1 12.0 Tf  [(eficiencia algorÌtmica)] TJ ET
0.24 w 0 J [  ] 0 d
118.380 98.844 m 230.412 98.844 l S
BT 230.412 100.379 Td /F1 12.0 Tf  [( es: )] TJ ET
BT 253.092 100.379 Td /F3 12.0 Tf  [("En Ciencias de la ComputaciÛn, el tÈrmino eficiencia )] TJ ET
BT 15.000 85.727 Td /F3 12.0 Tf  [(algorÌtmica es usado para describir aquellas propiedades de los algoritmos que est·n relacionadas con la )] TJ ET
BT 15.000 71.075 Td /F3 12.0 Tf  [(cantidad de recursos utilizados por el algoritmo. Un algoritmo debe ser analizado para determinar el uso )] TJ ET
BT 15.000 56.423 Td /F3 12.0 Tf  [(de los recursos que realiza. La eficiencia algorÌtmica puede ser vista como an·logo a la ingenierÌa de )] TJ ET
BT 15.000 41.771 Td /F3 12.0 Tf  [(productividad de un proceso repetitivo o continuo.)] TJ ET
BT 15.000 27.119 Td /F3 12.0 Tf  [(Con el objetivo de lograr una eficiencia m·xima se quiere minimizar el uso de recursos. Sin embargo, )] TJ ET
BT 15.000 12.467 Td /F3 12.0 Tf  [(varias medidas \(e.g. complejidad temporal, complejidad espacial\) no pueden ser comparadas )] TJ ET
BT 15.000 -2.185 Td /F3 12.0 Tf  [(directamente, luego, cu·l de dos algoritmos es considerado m·s eficiente, depende de cu·l medida de )] TJ ET
endstream
endobj
8 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F1
/BaseFont /Helvetica
/Encoding /WinAnsiEncoding
>>
endobj
9 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F2
/BaseFont /Helvetica-Bold
/Encoding /WinAnsiEncoding
>>
endobj
10 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F3
/BaseFont /Helvetica-Oblique
/Encoding /WinAnsiEncoding
>>
endobj
11 0 obj
<<
/Type /XObject
/Subtype /Image
/Width 50
/Height 41
/Filter /FlateDecode
/DecodeParms << /Predictor 15 /Colors 1 /Columns 50 /BitsPerComponent 8>>
/ColorSpace /DeviceGray
/BitsPerComponent 8
/Length 874>>
stream
HâïUD„aÕL&ôìLíIˆGŒúIÊ+˘Jí$I¶?299Ir˙„‰Ã9…ú$'ô…‰L2g&gr˙„díô$…díd2ìôÃW&˜ºﬂkmﬂuÓÛ«˚>ÔÛ>üÔÛ<Ô˚|üó±
4ço¡ëOÁ]&ˆ/8ÉOd¸ò:ª8ªÊäQOÛkÎ ∆l ßl}ã1âh±1c=∆òÑ¥ß*ÉÌ».Èª˙,ÍnÑÅ'oCÌ∆2Ó∫Î˘∑˘Ä‹\µvw≠ıÑñU Óx°≤∂WÑÆ=‡c•‚£ÚÏ‡ácm◊%M=!Úú—¬ÚÏ¬ç«˜˙é⁄„∏,Gèy≈4çY‘ãn´"M`[]\Í<*‘ÕË+n-≤pª¢ÈÁE2≥!e
tE∂ﬂ˜ük8>$¯dEÜi^÷—E6è1w∑ç≠Nk4NaY]cà∆ÀÂs:ç‘O†©öb»ÄÓ'Ä>u=àÄ—›ù(2vñö¡E4o¨q”è$O≈¶.ìîÀ⁄!ùXÊT· ¢Œ$·d%É∂4≠ü˚-∆ºA÷∏{1o–°å`ì·Rg£>Ã∏a8˘/
ª√Y≈z<∏5°Hc¡≠EöF+LéQÈ≈„ó£‚4Ósiü$”óˆû”∫&J™º
!ÔÛÂ∞√%ÑÈw1vÈÜ6üsπcí§≠:…ÆW ÎñF‡=cstóVÄ"ù¥_bàj‚ZIèBÖ√Ö4W‹¬.*RQ.é8Ê/ﬂæ$b˚âÛìvÚtÒñ:ﬁ"OmßµÑ≈F‡ß5Øf°˜W∫ïôÔq$ä	†áæˇGñ˙µ‰]Ù≈µß;ØP#Âhï¿‘Í>Gá∆ÅCëKÔBπÎ#©ÌÓdØ®YÙr≠W=ﬁi¯ü/™≠Môvø˜8êöò5¥—„‹A¡ÃxÃ™rVuª<0…Xü"çìrÖ.uª’ÊNib0ÉÁ
Hπ{C∆Vﬁø—Œ£APãƒÿ+–8ë«~E0N<Xk8/–Ò¯ÚB≥ÄÃk=Ÿ‚í=UJnªt≠	m^	“ßZ˝20´K)$¨Î>J‡b≤ZÈZ°„ ØË7vjè⁄ı∑*O£©]òè»¡¡§ŒVÜì«Ä˛"ßπXä}h{≈^F≥€ü,…U(ùÑE≥æ’_`2
endstream
endobj
12 0 obj
<<
/Type /XObject
/Subtype /Image
/Width 50
/Height 41
/SMask 11 0 R
/Filter /FlateDecode
/DecodeParms << /Predictor 15 /Colors 3 /Columns 50 /BitsPerComponent 8>>
/ColorSpace /DeviceRGB
/BitsPerComponent 8
/Length 70>>
stream
XÖÌŒ1Ä0 ±Rˇû,7ÒC¢ œÃú}ÓﬂÅoZÖV°UhZÖV°UhZÖV°UhZÖV°UhZÖV°U,mΩ:£O
endstream
endobj
13 0 obj
<< /Type /Annot
/Subtype /Link
/A 14 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 522.9170 83.6880 535.1270 ]
>>
endobj
14 0 obj
<< /Type /Action
/S /URI
/URI (https://es.wikipedia.org/wiki/Concurrencia_\(inform√°tica\))
>>
endobj
15 0 obj
<< /Type /Annot
/Subtype /Link
/A 16 0 R
/Border [0 0 0]
/H /I
/Rect [ 116.3640 522.9170 162.3840 535.1270 ]
>>
endobj
16 0 obj
<< /Type /Action
/S /URI
/URI (https://definicion.de/computo/)
>>
endobj
17 0 obj
<< /Type /Annot
/Subtype /Link
/A 18 0 R
/Border [0 0 0]
/H /I
/Rect [ 83.6880 449.9090 125.0400 462.1190 ]
>>
endobj
18 0 obj
<< /Type /Action
/S /URI
/URI (https://www.testdevelocidad.es/2016/08/18/la-latencia-podemos-mejorarla/)
>>
endobj
19 0 obj
<< /Type /Annot
/Subtype /Link
/A 20 0 R
/Border [0 0 0]
/H /I
/Rect [ 383.1600 347.8490 438.5040 360.0590 ]
>>
endobj
20 0 obj
<< /Type /Action
/S /URI
/URI (https://retina.elpais.com/retina/2018/03/22/tendencias/1521745909_941081.html)
>>
endobj
21 0 obj
<< /Type /Annot
/Subtype /Link
/A 22 0 R
/Border [0 0 0]
/H /I
/Rect [ 118.3800 99.2690 230.4120 111.4790 ]
>>
endobj
22 0 obj
<< /Type /Action
/S /URI
/URI (https://es.wikipedia.org/wiki/Eficiencia_algor√≠tmica)
>>
endobj
23 0 obj
<< /Type /Page
/Parent 3 0 R
/Annots [ 26 0 R 28 0 R 30 0 R 32 0 R 34 0 R 36 0 R 38 0 R 40 0 R 42 0 R 44 0 R 46 0 R 48 0 R ]
/Contents 24 0 R
>>
endobj
24 0 obj
<<
/Length 5578 >>
stream

0.000 0.000 0.000 rg
0.000 0.000 0.000 RG
0.24 w 0 J [  ] 0 d
BT 15.000 830.168 Td /F3 12.0 Tf  [(eficiencia se est· considerando como prioridad, e.g. la prioridad podrÌa ser obtener la salida del algoritmo )] TJ ET
BT 15.000 815.516 Td /F3 12.0 Tf  [(lo m·s r·pido posible, o que minimice el uso de la memoria, o alguna otra medida particular.")] TJ ET
BT 15.000 786.464 Td /F1 12.0 Tf  [(Ya que no todos los algoritmos se comportan igual en el tiempo es necesario medir su rendimiento y )] TJ ET
BT 15.000 771.812 Td /F1 12.0 Tf  [(eficiencia en el tiempo a medida que el volumen de datos que tienen que gestionar aumenta. Existen )] TJ ET
BT 15.000 757.160 Td /F1 12.0 Tf  [(diferentes tÈcnicas/metodologÌas para planificar el comportamiento de los algoritmos. Una de las m·s )] TJ ET
BT 15.000 742.508 Td /F1 12.0 Tf  [(utilizadas es la notaciÛn O Grande \(Big O Notation\):)] TJ ET
BT 15.000 727.856 Td /F2 12.0 Tf  [(1.-)] TJ ET
BT 32.340 727.856 Td /F1 12.0 Tf  [(https://medium.com/@charlie_fuentes/notacion-big-0-para-principiantes-f9cbb4b6bec8)] TJ ET
0.24 w 0 J [  ] 0 d
32.340 726.322 m 492.036 726.322 l S
BT 15.000 713.204 Td /F2 12.0 Tf  [(2.-)] TJ ET
BT 32.340 713.204 Td /F1 12.0 Tf  [(https://www.campusmvp.es/recursos/post/Rendimiento-de-algoritmos-y-notacion-Big-O.aspx)] TJ ET
0.24 w 0 J [  ] 0 d
32.340 711.670 m 523.812 711.670 l S
BT 15.000 698.552 Td /F2 12.0 Tf  [(3.-)] TJ ET
BT 32.340 698.552 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=HEISXs0wYlM)] TJ ET
0.24 w 0 J [  ] 0 d
32.340 697.018 m 298.764 697.018 l S
BT 15.000 669.500 Td /F1 12.0 Tf  [(Al tratar de caracterizar la eficiencia de un algoritmo en tÈrminos del tiempo de ejecuciÛn, )] TJ ET
BT 15.000 654.848 Td /F1 12.0 Tf  [(independientemente de cualquier programa o computadora, es importante cuantificar el n˙mero de )] TJ ET
BT 15.000 640.196 Td /F1 12.0 Tf  [(operaciones o pasos que necesitar· el algoritmo para cumplir con su propÛsito. Si se considera que cada )] TJ ET
BT 15.000 625.544 Td /F1 12.0 Tf  [(uno de estos pasos es una unidad b·sica de c·lculo, el tiempo de ejecuciÛn de un algoritmo puede )] TJ ET
BT 15.000 610.892 Td /F1 12.0 Tf  [(expresarse como el n˙mero de pasos necesarios para resolver el problema. Este n˙mero de pasos )] TJ ET
BT 15.000 596.240 Td /F1 12.0 Tf  [(depender· de cÛmo se implemente el algoritmo para resolver el problema dado y la )] TJ ET
BT 463.188 596.240 Td /F2 12.0 Tf  [(notaciÛn Big O)] TJ ET
BT 548.532 596.240 Td /F1 12.0 Tf  [( lo )] TJ ET
BT 15.000 581.588 Td /F1 12.0 Tf  [(que trata de medir son el n˙mero de pasos.)] TJ ET
BT 15.000 552.536 Td /F2 12.0 Tf  [(Ejercicio:)] TJ ET
BT 69.024 552.536 Td /F1 12.0 Tf  [( Debes programar el problema que se plantea en la siguiente secuencia de videos en el )] TJ ET
BT 15.000 537.884 Td /F1 12.0 Tf  [(lenguaje de programaciÛn que desees:)] TJ ET
BT 15.000 523.232 Td /F2 12.0 Tf  [(1.-)] TJ ET
BT 32.340 523.232 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=GD254Gotp-4)] TJ ET
0.24 w 0 J [  ] 0 d
32.340 521.698 m 295.452 521.698 l S
BT 15.000 508.580 Td /F2 12.0 Tf  [(2.)] TJ ET
BT 25.008 508.580 Td /F1 12.0 Tf  [(- )] TJ ET
BT 32.340 508.580 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=MaY6FpP0FEU)] TJ ET
0.24 w 0 J [  ] 0 d
32.340 507.046 m 304.776 507.046 l S
BT 15.000 479.528 Td /F2 12.0 Tf  [(NOTA:)] TJ ET
BT 52.992 479.528 Td /F1 12.0 Tf  [( Debes subir el ejercicio a tu repositorio GitHub como siempre.)] TJ ET
0.953 0.576 0.224 rg
BT 15.000 448.916 Td /F2 12.0 Tf  [(#HASHTAGS )] TJ ET
BT 92.340 448.916 Td /F4 12.0 Tf  [( \(etiquetas de ayuda para b˙squeda de informaciÛn relevante\))] TJ ET
0.000 0.000 0.000 rg
BT 15.000 418.304 Td /F1 12.0 Tf  [(#NotaciÛn-O-Grande #Big-O-Notation #algoritmos-de-ordenaciÛn #notaciÛn-asintÛtica #eficiencia )] TJ ET
BT 15.000 403.652 Td /F1 12.0 Tf  [(#computaciÛn #algoritmia)] TJ ET
0.953 0.576 0.224 rg
BT 15.000 373.040 Td /F2 12.0 Tf  [(LINKS DE INTER…S)] TJ ET
0.000 0.000 0.000 rg
BT 15.000 342.428 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=HEISXs0wYlM)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 340.894 m 281.424 340.894 l S
BT 15.000 327.776 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=IZgOEC0NIbw)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 326.242 m 280.764 326.242 l S
BT 15.000 313.124 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=GD254Gotp-4)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 311.590 m 278.112 311.590 l S
BT 15.000 298.472 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=MaY6FpP0FEU)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 296.938 m 287.436 296.938 l S
BT 15.000 283.820 Td /F1 12.0 Tf  [(https://medium.com/@charlie_fuentes/notacion-big-0-para-principiantes-f9cbb4b6bec8)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 282.286 m 474.696 282.286 l S
BT 15.000 269.168 Td /F1 12.0 Tf  [(https://www.campusmvp.es/recursos/post/Rendimiento-de-algoritmos-y-notacion-Big-O.aspx)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 267.634 m 506.472 267.634 l S
BT 15.000 254.516 Td /F1 12.0 Tf  [(https://www.youtube.com/watch?v=D6xkbGLQesk)] TJ ET
0.24 w 0 J [  ] 0 d
15.000 252.982 m 281.436 252.982 l S
0.953 0.576 0.224 rg
BT 15.000 223.904 Td /F2 12.0 Tf  [(DICCIONARIO)] TJ ET
0.000 0.000 0.000 rg
BT 15.000 193.292 Td /F1 12.0 Tf  [(NotaciÛn-asintÛtica | NotaciÛn-Big-O | Algoritmos-de-ordenaciÛn)] TJ ET
0.953 0.576 0.224 rg
BT 15.000 162.680 Td /F2 12.0 Tf  [(PUNTUACI”N)] TJ ET
0.000 0.000 0.000 rg
BT 15.000 132.068 Td /F1 12.0 Tf  [(ProgramaciÛn: 4)] TJ ET
BT 15.000 117.416 Td /F1 12.0 Tf  [(Redes: 2)] TJ ET
BT 15.000 102.764 Td /F1 12.0 Tf  [(Seguridad: 2)] TJ ET
BT 15.000 88.112 Td /F1 12.0 Tf  [(Algoritmia: 5)] TJ ET
endstream
endobj
25 0 obj
<< /Type /Font
/Subtype /Type1
/Name /F4
/BaseFont /Helvetica-BoldOblique
/Encoding /WinAnsiEncoding
>>
endobj
26 0 obj
<< /Type /Annot
/Subtype /Link
/A 27 0 R
/Border [0 0 0]
/H /I
/Rect [ 32.3400 726.7464 492.0360 738.9564 ]
>>
endobj
27 0 obj
<< /Type /Action
/S /URI
/URI (https://medium.com/@charlie_fuentes/notacion-big-0-para-principiantes-f9cbb4b6bec8)
>>
endobj
28 0 obj
<< /Type /Annot
/Subtype /Link
/A 29 0 R
/Border [0 0 0]
/H /I
/Rect [ 32.3400 712.0944 523.8120 724.3044 ]
>>
endobj
29 0 obj
<< /Type /Action
/S /URI
/URI (https://www.campusmvp.es/recursos/post/Rendimiento-de-algoritmos-y-notacion-Big-O.aspx)
>>
endobj
30 0 obj
<< /Type /Annot
/Subtype /Link
/A 31 0 R
/Border [0 0 0]
/H /I
/Rect [ 32.3400 697.4424 298.7640 709.6524 ]
>>
endobj
31 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=HEISXs0wYlM)
>>
endobj
32 0 obj
<< /Type /Annot
/Subtype /Link
/A 33 0 R
/Border [0 0 0]
/H /I
/Rect [ 32.3400 522.1224 295.4520 534.3324 ]
>>
endobj
33 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=GD254Gotp-4)
>>
endobj
34 0 obj
<< /Type /Annot
/Subtype /Link
/A 35 0 R
/Border [0 0 0]
/H /I
/Rect [ 32.3400 507.4704 304.7760 519.6804 ]
>>
endobj
35 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=MaY6FpP0FEU)
>>
endobj
36 0 obj
<< /Type /Annot
/Subtype /Link
/A 37 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 341.3184 281.4240 353.5284 ]
>>
endobj
37 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=HEISXs0wYlM)
>>
endobj
38 0 obj
<< /Type /Annot
/Subtype /Link
/A 39 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 326.6664 280.7640 338.8764 ]
>>
endobj
39 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=IZgOEC0NIbw)
>>
endobj
40 0 obj
<< /Type /Annot
/Subtype /Link
/A 41 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 312.0144 278.1120 324.2244 ]
>>
endobj
41 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=GD254Gotp-4)
>>
endobj
42 0 obj
<< /Type /Annot
/Subtype /Link
/A 43 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 297.3624 287.4360 309.5724 ]
>>
endobj
43 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=MaY6FpP0FEU)
>>
endobj
44 0 obj
<< /Type /Annot
/Subtype /Link
/A 45 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 282.7104 474.6960 294.9204 ]
>>
endobj
45 0 obj
<< /Type /Action
/S /URI
/URI (https://medium.com/@charlie_fuentes/notacion-big-0-para-principiantes-f9cbb4b6bec8)
>>
endobj
46 0 obj
<< /Type /Annot
/Subtype /Link
/A 47 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 268.0584 506.4720 280.2684 ]
>>
endobj
47 0 obj
<< /Type /Action
/S /URI
/URI (https://www.campusmvp.es/recursos/post/Rendimiento-de-algoritmos-y-notacion-Big-O.aspx)
>>
endobj
48 0 obj
<< /Type /Annot
/Subtype /Link
/A 49 0 R
/Border [0 0 0]
/H /I
/Rect [ 15.0000 253.4064 281.4360 265.6164 ]
>>
endobj
49 0 obj
<< /Type /Action
/S /URI
/URI (https://www.youtube.com/watch?v=D6xkbGLQesk)
>>
endobj
xref
0 50
0000000000 65535 f 
0000000008 00000 n 
0000000073 00000 n 
0000000119 00000 n 
0000000350 00000 n 
0000000387 00000 n 
0000000735 00000 n 
0000000845 00000 n 
0000007802 00000 n 
0000007909 00000 n 
0000008021 00000 n 
0000008137 00000 n 
0000009253 00000 n 
0000009577 00000 n 
0000009703 00000 n 
0000009814 00000 n 
0000009942 00000 n 
0000010024 00000 n 
0000010151 00000 n 
0000010275 00000 n 
0000010403 00000 n 
0000010532 00000 n 
0000010659 00000 n 
0000010764 00000 n 
0000010925 00000 n 
0000016556 00000 n 
0000016676 00000 n 
0000016803 00000 n 
0000016937 00000 n 
0000017064 00000 n 
0000017202 00000 n 
0000017329 00000 n 
0000017424 00000 n 
0000017551 00000 n 
0000017646 00000 n 
0000017773 00000 n 
0000017868 00000 n 
0000017995 00000 n 
0000018090 00000 n 
0000018217 00000 n 
0000018312 00000 n 
0000018439 00000 n 
0000018534 00000 n 
0000018661 00000 n 
0000018756 00000 n 
0000018883 00000 n 
0000019017 00000 n 
0000019144 00000 n 
0000019282 00000 n 
0000019409 00000 n 
trailer
<<
/Size 50
/Root 1 0 R
/Info 5 0 R
>>
startxref
19504
%%EOF
